class Triangle {
  float triWidth = 50;   
  float triHeight= 50;
  
  float triWidthBob = 100;   
  float triHeightBob = 100;

  float x = triWidth/2;
  float y = triHeight/2; // Starting position of shape    
   
  float xBob = width/2;
  float yBob = height/2;
  
  color c;
  float speed;
  float xspeed;  // Speed of the shape
  float yspeed;  // Speed of the shape

  int xdirection = 5;  // Left to Right
  int ydirection = 5;  // Top to Bottom

  String diag = "45degrees";    //Bob's start direction on the screen
  String direction = "RIGHT";  //Alice's start direction on the screen

// Alice size//
  float X1 = 0;
  float Y1 = 0;
  float X2 = 50;
  float Y2 = 25;
  float X3 = 0;
  float Y3 = 50;
//Bob size//  
  float X11 = 0;
  float Y11 = 0;
  float X21 = 100;
  float Y21 = 50;
  float X31 = 0;
  float Y31 = 100;

  // Contructors//
  Triangle() {
    c = color(59, 156, 99); 
    yspeed = 1;
    xspeed = 1;
  }

  Triangle(color c, float speed) {
    this.c = c;
    this.speed = speed;
  }



  // ************* - Alice - ************* //
  void display() {  

    pushMatrix();
    translate(x, y);                //move half Alice size right, down for starting
    if (direction == "RIGHT") {
      rotate(radians(0));        //0 dregrees
    } else if (direction == "DOWN") {
      rotate(radians(90));    //90degrees
    } else if (direction == "LEFT") {
      rotate(radians(180));     //180degrees
    } else if (direction == "UP") {
      rotate(radians(-90));  //-90 degrees
    } 

    translate(-triWidth/2, -triHeight/2);  //move half Alice size left, up for ending


    fill(c);
    triangle(X1, Y1, X2, Y2, X3, Y3);
    ellipseMode(RADIUS);  
    fill(0);  
    ellipse(50, 25, 5, 5);
    popMatrix();
  }

  void drive() {

    switch (direction) {
    case "RIGHT":
      x = x + speed;
      if (x >= (width - 25)) {  //If X greater than screen minus half car
        direction = "DOWN";
      }
      break;
    case "DOWN":
      y = y + speed;
      if (y >= (height - 25)) {
        direction = "LEFT";
      }
      break;
    case "LEFT":
      x = x - speed;
      if (x <= 25) {
        direction = "UP";
      }
      break;
    case "UP":
      y = y - speed;
      if (y <= 25) {
        direction = "RIGHT";
      }
      break;
    }
  }
  
  
  
  // ************* - Bob - ************* //
  void drive2() {
    xBob = xBob + ( xspeed * xdirection );
    yBob = yBob + ( yspeed * ydirection );


    if (xBob > (width - triWidthBob/2) || xBob < (triWidthBob/2)) {
      xdirection *= -1;
    }
    if (yBob > (height - triHeightBob/2)|| yBob < (triHeightBob/2)) {
      ydirection *= -1;
    }
  }

  void display2() {
    pushMatrix();
    translate(xBob, yBob);
    switch (diag) { 

    case "45degrees":                  
      rotate(radians(45));                   // Starts 45 degree 

      if (yBob>(height - triHeightBob/2)) {       //if reach down rotate 315
        diag = "315degrees";
      }
      if (xBob>(width-triWidthBob/2)) {
        diag = "135degrees";
      }
      break;


    case "315degrees":
    rotate(radians(315));                         //turn 315                       
      if (yBob<(triHeightBob/2)) {              //
        diag = "45degrees";
      }
      if (xBob>(width-triWidthBob/2)) {
        diag = "225degrees";
      }
      break;

    case "135degrees":
      rotate(radians(135));                   //turn 135 
      if (yBob >(height - triHeightBob/2)) {    //
        diag = "225degrees";
      } 
      if (xBob < triWidthBob/2) {
        diag = "45degrees";
      }
      break;  

    case "225degrees":
      rotate(radians(225));                  //turn 225 
      if ( yBob < triHeightBob/2) {
        diag = "135degrees";
      }
      if (xBob < triWidthBob/2) {
        diag = "315degrees";
      }
      break;
    }

    translate(-triWidthBob/2, -triHeightBob/2);


    fill(c);
    triangle(X11, Y11, X21, Y21, X31, Y31);
    ellipseMode(RADIUS);  
    fill(0);  
    ellipse(100, 50, 5, 5);
    popMatrix();
  }
}
